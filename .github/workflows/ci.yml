name: Django Polls App CI

on:
  workflow_dispatch: # UIから手動で実行できるようななる
  push:
    branches: releases/** # 以下のbranchへのプッシュが実行されたジョブが始まる

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:

  Build-Test: # ビルドとテスト
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # - name: Setup Pages
        # uses: actions/configure-pages@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v3
        with:
          python-version: 3.6
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Django Collectstatic # staticfilesを作成しTestを通過する
        run: pyhton3 manage.py collectstatic
      - name: Run Code checker # コードのチェック
        continue-on-error: true
        run: |
          black --check polls
          flake8 polls mysite
          isort --check polls
      - name: Run Test
        continue-on-error: true # test runが失敗しても、以降の処理が続行されるようにする
        run: |
          coverage run --include=polls/* --omit=polls/migrations/* manage.py test polls
      - name: Run Coverage report
        run: |
          coverage report
          coverage html
      - name: Run Migration check # データベーススキーマとモデルが一致しているか
        continue-on-error: true
        run: python3 manage.py makemigrations --check
      - name: Run Validate deploy # 安全にデプロイできるか検証
        run: python3 manage.py check --deploy
      - name: Upload artifact # カバレッジレポートをアップロード
        uses: actions/upload-pages-artifact@v1
        with:
          path: htmlcov

  Test-CoverageReport: # テストのカバレッジレポートをデプロイ
    runs-on: ubuntu-latest
    needs: Build-Test
    environment: # 環境変数
      name: github-pages
      url: ${{ steps.coverage.outputs.page_url }}
    steps:
      - name: Caverage to GitHub Pages # Pagesにデプロイ
        id: coverage
        uses: actions/deploy-pages@v1
